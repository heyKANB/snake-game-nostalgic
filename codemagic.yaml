workflows:
  ios-snake-game:
    name: iOS Snake Game Build & Deploy
    max_build_duration: 60
    instance_type: mac_mini_m1
    integrations:
      app_store_connect: Code Magic
    environment:
      ios_signing:
        distribution_type: app_store
        bundle_identifier: com.snakegame.nostalgic
        # Codemagic automatically manages certificates and provisioning profiles
        # when App Store Connect integration is configured
      vars:
        BUNDLE_ID: "com.snakegame.nostalgic"
        XCODE_WORKSPACE: "ios/App/App.xcworkspace"
        XCODE_SCHEME: "App"
        APP_STORE_APPLE_ID: 1234567890  # You'll get this from App Store Connect
      groups:
        - app_store_credentials  # This group will contain your Apple Developer credentials
      node: v18.17.0
      xcode: latest
      cocoapods: default
    cache:
      cache_paths:
        - $CM_BUILD_DIR/node_modules
    triggering:
      events:
        - push
        - tag
        - pull_request
      branch_patterns:
        - pattern: main
          include: true
          source: true
    scripts:
      - name: Install npm dependencies
        script: |
          npm ci
      - name: Install CocoaPods dependencies
        script: |
          cd ios/App && pod install
      - name: Set up Capacitor
        script: |
          npm run build
          npx cap sync ios
      - name: Set up code signing settings on Xcode project
        script: |
          # Apply automatic code signing with Codemagic-managed certificates
          xcode-project use-profiles
      - name: Build ipa for distribution
        script: |
          xcode-project build-ipa \
            --workspace "$XCODE_WORKSPACE" \
            --scheme "$XCODE_SCHEME"
    artifacts:
      - build/ios/ipa/*.ipa
      - /tmp/xcodebuild_logs/*.log
      - $CM_BUILD_DIR/ios/App/build/ios/ipa/*.ipa
    publishing:
      email:
        recipients:
          - your-email@example.com  # Replace with your email
        notify:
          success: true
          failure: true
      app_store_connect:
        auth: integration
        
        # Submit to TestFlight but not to App Store review
        submit_to_testflight: true
        beta_groups:
          - App Store Connect Users
        submit_to_app_store: false
        
        # Uncomment when ready for App Store submission
        # submit_to_app_store: true
        # cancel_previous_submissions: true
        # release_type: AFTER_APPROVAL

  android-snake-game:
    name: Android Snake Game Build & Deploy
    max_build_duration: 60
    instance_type: linux_x2
    environment:
      android_signing:
        # Automatic Android signing with uploaded keystore
        - keystore_reference  # This references the keystore uploaded to Codemagic
        # Alternative manual signing variables:
        # - keystore: $ANDROID_KEYSTORE
        # - keystore_password: $ANDROID_KEYSTORE_PASSWORD
        # - key_alias: $ANDROID_KEY_ALIAS
        # - key_password: $ANDROID_KEY_PASSWORD
      groups:
        - google_play
      vars:
        PACKAGE_NAME: "com.snakegame.nostalgic"
      node: v18.17.0
      java: 17
    cache:
      cache_paths:
        - $CM_BUILD_DIR/node_modules
        - ~/.gradle/caches
    triggering:
      events:
        - push
        - tag
        - pull_request
      branch_patterns:
        - pattern: main
          include: true
          source: true
    scripts:
      - name: Install npm dependencies
        script: |
          npm ci
      - name: Set up Capacitor
        script: |
          npm run build
          npx cap sync android
      - name: Set up local.properties
        script: |
          echo "sdk.dir=$ANDROID_SDK_ROOT" > "$CM_BUILD_DIR/android/local.properties"
      - name: Build Android release
        script: |
          cd android
          ./gradlew bundleRelease
    artifacts:
      - android/app/build/outputs/**/*.aab
      - android/app/build/outputs/**/*.apk
    publishing:
      email:
        recipients:
          - your-email@example.com  # Replace with your email
        notify:
          success: true
          failure: true
      google_play:
        credentials: $GCLOUD_SERVICE_ACCOUNT_CREDENTIALS
        track: internal
        submit_as_draft: true